---
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  APP_NAME: hostpath-provisioner
  REGISTRY_IMAGE: ${{ github.repository_owner }}/hostpath-provisioner

name: hostpath-provisioner
run-name: ${{ github.actor }} is pushing new hostpath-provisioner image to GitHub Actions ðŸš€
on:
  push:
    paths:
      - ".github/workflows/hostpath-provisioner.yml"
      - "./**"
    tags: ['[0-9]+.[0-9]+.[0-9]+[a-z]?']

permissions:
  contents: write # needed to write releases
  id-token: write # needed for keyless signing
  packages: write # needed for ghcr access

jobs:
  docker_build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          #- linux/386
          #- linux/ppc64le
          #- linux/s390x
          #- linux/arm/v6
          #- linux/arm/v7
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare
        id: prep
        run: |
          VERSION=sha-${GITHUB_SHA::8}
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF/refs\/tags\//}
          fi
          export TAG=$(git tag)
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "REVISION=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:v0.10.6
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          #context: "{{defaultContext}}:."
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/hostpath-provisioner:latest, ${{ vars.DOCKERHUB_USERNAME }}/hostpath-provisioner:${{ github.ref_name }}
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - docker_build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}

####  ghcr_build:
####    runs-on: ubuntu-latest
####    steps:
####      - uses: actions/checkout@v3
####      - name: Setup QEMU
####        uses: docker/setup-qemu-action@v2
####        with:
####          platforms: all
####      - name: Setup Docker Buildx
####        id: buildx
####        uses: docker/setup-buildx-action@v2
####        with:
####          driver-opts: |
####            image=moby/buildkit:v0.10.6
####      - name: Login to GitHub Container Registry
####        uses: docker/login-action@v2
####        with:
####          registry: ghcr.io
####          username: ${{ vars.GHCR_USERNAME }}
####          password: ${{ secrets.GHCR_TOKEN }}
####      - name: Prepare
####        id: prep
####        run: |
####          VERSION=sha-${GITHUB_SHA::8}
####          if [[ $GITHUB_REF == refs/tags/* ]]; then
####            VERSION=${GITHUB_REF/refs\/tags\//}
####          fi
####          export TAG=$(git tag)
####          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
####          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
####          echo "REVISION=${GITHUB_SHA}" >> $GITHUB_OUTPUT
####          echo "TAG=${TAG}" >> $GITHUB_OUTPUT
####      - name: Generate images meta
####        id: meta
####        uses: docker/metadata-action@v4
####        with:
####          github-token: ${{ secrets.GITHUB_TOKEN }}
####          images: |
####            ghcr.io/djh00t/hostpath-provisioner
####          tags: |
####            type=raw,value=${{ steps.prep.outputs.VERSION }}
####            type=raw,value=latest
####      - name: Publish base image
####        uses: docker/build-push-action@v3
####        with:
####          builder: ${{ steps.buildx.outputs.name }}
####          # context: "{{defaultContext}}:."
####          file: Dockerfile
####          platforms: linux/amd64,linux/arm64
####          # ,linux/ppc64le,linux/386,linux/s390x
####          push: true
####          tags: ghcr.io/${{ vars.GHCR_USERNAME }}/hostpath-provisioner:latest, ghcr.io/${{ vars.GHCR_USERNAME }}/hostpath-provisioner:${{ steps.meta.outputs.version }}
####      
####